# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `mjml-rails` gem.
# Please instead update this file by running `bin/tapioca gem mjml-rails`.


# source://mjml-rails//lib/mjml/handler.rb#7
module Mjml
  # source://mjml-rails//lib/mjml.rb#12
  def beautify; end

  # source://mjml-rails//lib/mjml.rb#12
  def beautify=(val); end

  # source://mjml-rails//lib/mjml.rb#12
  def minify; end

  # source://mjml-rails//lib/mjml.rb#12
  def minify=(val); end

  # source://mjml-rails//lib/mjml.rb#12
  def mjml_binary; end

  # source://mjml-rails//lib/mjml.rb#12
  def mjml_binary=(val); end

  # source://mjml-rails//lib/mjml.rb#12
  def mjml_binary_error_string; end

  # source://mjml-rails//lib/mjml.rb#12
  def mjml_binary_error_string=(val); end

  # source://mjml-rails//lib/mjml.rb#12
  def mjml_binary_version_supported; end

  # source://mjml-rails//lib/mjml.rb#12
  def mjml_binary_version_supported=(val); end

  # source://mjml-rails//lib/mjml.rb#12
  def raise_render_exception; end

  # source://mjml-rails//lib/mjml.rb#12
  def raise_render_exception=(val); end

  # source://mjml-rails//lib/mjml.rb#12
  def template_language; end

  # source://mjml-rails//lib/mjml.rb#12
  def template_language=(val); end

  # source://mjml-rails//lib/mjml.rb#22
  def valid_mjml_binary=(val); end

  # source://mjml-rails//lib/mjml.rb#12
  def validation_level; end

  # source://mjml-rails//lib/mjml.rb#12
  def validation_level=(val); end

  class << self
    # source://mjml-rails//lib/mjml.rb#12
    def beautify; end

    # source://mjml-rails//lib/mjml.rb#12
    def beautify=(val); end

    # source://mjml-rails//lib/mjml.rb#93
    def bin_path_from(package_manager); end

    # source://mjml-rails//lib/mjml.rb#56
    def check_for_custom_mjml_binary; end

    # source://mjml-rails//lib/mjml.rb#88
    def check_for_global_mjml_binary; end

    # source://mjml-rails//lib/mjml.rb#80
    def check_for_npm_mjml_binary; end

    # source://mjml-rails//lib/mjml.rb#72
    def check_for_yarn_mjml_binary; end

    # source://mjml-rails//lib/mjml.rb#33
    def check_version(bin); end

    # source://mjml-rails//lib/mjml.rb#103
    def discover_mjml_bin; end

    # source://mjml-rails//lib/mjml.rb#115
    def logger; end

    # Sets the attribute logger
    #
    # @param value the value to set the attribute logger to.
    #
    # source://mjml-rails//lib/mjml.rb#113
    def logger=(_arg0); end

    # source://mjml-rails//lib/mjml.rb#12
    def minify; end

    # source://mjml-rails//lib/mjml.rb#12
    def minify=(val); end

    # source://mjml-rails//lib/mjml.rb#12
    def mjml_binary; end

    # source://mjml-rails//lib/mjml.rb#12
    def mjml_binary=(val); end

    # source://mjml-rails//lib/mjml.rb#12
    def mjml_binary_error_string; end

    # source://mjml-rails//lib/mjml.rb#12
    def mjml_binary_error_string=(val); end

    # source://mjml-rails//lib/mjml.rb#12
    def mjml_binary_version_supported; end

    # source://mjml-rails//lib/mjml.rb#12
    def mjml_binary_version_supported=(val); end

    # source://mjml-rails//lib/mjml.rb#12
    def raise_render_exception; end

    # source://mjml-rails//lib/mjml.rb#12
    def raise_render_exception=(val); end

    # source://mjml-rails//lib/mjml.rb#40
    def run_mjml(args, mjml_bin: T.unsafe(nil)); end

    # @yield [_self]
    # @yieldparam _self [Mjml] the object that the method was called on
    #
    # source://mjml-rails//lib/mjml.rb#108
    def setup; end

    # source://mjml-rails//lib/mjml.rb#12
    def template_language; end

    # source://mjml-rails//lib/mjml.rb#12
    def template_language=(val); end

    # source://mjml-rails//lib/mjml.rb#44
    def valid_mjml_binary; end

    # source://mjml-rails//lib/mjml.rb#22
    def valid_mjml_binary=(val); end

    # source://mjml-rails//lib/mjml.rb#12
    def validation_level; end

    # source://mjml-rails//lib/mjml.rb#12
    def validation_level=(val); end
  end
end

# source://mjml-rails//lib/mjml/handler.rb#8
class Mjml::Handler
  # Optional second source parameter to make it work with Rails >= 6:
  # Beginning with Rails 6 template handlers get the source of the template as the second
  # parameter.
  #
  # source://mjml-rails//lib/mjml/handler.rb#16
  def call(template, source = T.unsafe(nil)); end

  # source://mjml-rails//lib/mjml/handler.rb#9
  def template_handler; end

  private

  # source://mjml-rails//lib/mjml/handler.rb#35
  def compile_source(source, template); end
end

# source://mjml-rails//lib/mjml/parser.rb#4
class Mjml::Parser
  # Create new parser
  #
  # @param input [String] The string to transform in html
  # @return [Parser] a new instance of Parser
  #
  # source://mjml-rails//lib/mjml/parser.rb#12
  def initialize(input); end

  # Returns the value of attribute input.
  #
  # source://mjml-rails//lib/mjml/parser.rb#7
  def input; end

  # Render mjml template
  #
  # @return [String]
  #
  # source://mjml-rails//lib/mjml/parser.rb#21
  def render; end

  # Exec mjml command
  #
  #
  # @return [String] The result as string
  #
  # source://mjml-rails//lib/mjml/parser.rb#39
  def run(in_tmp_file, beautify = T.unsafe(nil), minify = T.unsafe(nil), validation_level = T.unsafe(nil)); end
end

# source://mjml-rails//lib/mjml/parser.rb#5
class Mjml::Parser::ParseError < ::StandardError; end

# source://mjml-rails//lib/mjml/railtie.rb#4
class Mjml::Railtie < ::Rails::Railtie; end
